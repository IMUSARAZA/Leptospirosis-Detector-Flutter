# Set the platform version to iOS 13.0 to ensure compatibility with Firebase and other pods.
platform :ios, '13.0'

# Disable CocoaPods analytics to reduce build times.
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

# Define the project settings for different build configurations.
project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

# Function to get the Flutter root path.
def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. If you're running pod install manually, make sure flutter pub get is executed first."
  end

  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT\=(.*)/)
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}. Try deleting Generated.xcconfig, then run flutter pub get."
end

# Require Flutter's pod helper.
require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

# Main target for the Flutter app.
target 'Runner' do
  pod 'FirebaseFirestore', :git => 'https://github.com/invertase/firestore-ios-sdk-frameworks.git', :tag => '8.9.0'
  use_frameworks!  # Enable frameworks for pods that require it.
  # Override Firebase SDK Version
  $FirebaseSDKVersion = '10.22.0'
  # Install all the iOS pods required for Flutter.
  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))

  # Add Firebase dependencies.
  pod 'Firebase/Analytics'
  pod 'Firebase/Auth'
  pod 'Firebase/Storage'
  pod 'Firebase/Messaging'
  pod 'Firebase/Firestore'
end

# Post-install configurations to modify specific pod build settings.
post_install do |installer|
  installer.pods_project.targets.each do |target|
    # Example to modify specific pod build settings for BoringSSL-GRPC.
    if target.name == 'BoringSSL-GRPC'
      target.source_build_phase.files.each do |file|
        if file.settings && file.settings['COMPILER_FLAGS']
          flags = file.settings['COMPILER_FLAGS'].split
          flags.reject! { |flag| flag == '-GCC_WARN_INHIBIT_ALL_WARNINGS' }
          file.settings['COMPILER_FLAGS'] = flags.join(' ')
        end
      end
    end

    # Update the deployment target to ensure compatibility.
    flutter_additional_ios_build_settings(target)
    target.build_configurations.each do |config|
      config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '13.0'
    end
  end
end
